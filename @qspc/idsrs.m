function obj = idsrs(Ts,Max,M,td,w,tf,zmin,plt,dt,n)
%IDSRS      Input Disturbance Step Response Specification
%            
% obj = IDSRS(spcfile,specname,Ts,Max,M,td,w,tf,zmin,plt,dt,n)
% 
%   Transfers time-domain input disturbance step specifications to the 
%   frequency domain, using simulations of a 2nd order system 
%   c*s/(s^2+2*z*w0*s+w0^2) and gridding over its parameters. this is the
%   input disturbance closed loop P/(1+PG) transfer function obtained when 
%   the plant is the first order system c/(s+a) and the controller is a 
%   pure integrator k/s.
%
%   Output
% 
%   obj         qspc object
%
%   Input
%
%   Ts          [Settling time,upper deviation (%), lower deviation (%)]. 
%               The default value for the lower deviation is the upper
%               deviation and the default value for the upper deviation is 
%               5% of Max.
% 
%	Max         maximum allowed value (absolute value, not dB nor percent)
%               of the step response.
% 
%   M           undershoot given in percent of Max.
% 
%   td          Minimum rise time. Default value ts/5. The step responces
%               will be below the line from the origin to (td,Max). This 
%               imposes a limitation of the derivative at t=0.
% 
%   w           frequency vector. The default value is 
%               'logspace(log10(2*pi/(Final-time)/20),log10(20*pi/(Minimumrise-time)*2))'. 
% 
%   tf          final time. The default value is 2*Settling-time.
% 
%   zmin        minimum damping of the poles, default is zmin=0.01
%
%   plt         plot option. Logical variable for switching on and off 
%               plotting information of step responses. def= 1 (plot on).
% 
%  	dt          time increment for the simulation; The default value is 
%               Final-time/100
% 
%  	n           number of grid-points in the space of parameters of the 
%               simulated system. The default value is n=[40,40]. For
%               alternative gridding The number of grid-points is prod(n).
%        
%
% Example
%
%   spec1 = qspc.idsrs([0.1 1], 0.5, 10);
% 
%   	create a qspc object spec1 that is generated by an input disturbance 
%       step response that settles within 0.1 second within 1%, and whose 
%       maximum is <= 0.5, and whose undershoot is less than 10% of that, 
%       i.e. 0.05.
% 
%
% See also: RSRS, ODSRS, SPC_ID2.

% Author: M Nordin
% Version Upgrade: A. & Y. Greenhut
% OO Version: Daniel Rubin, 4-Feb-2019


if nargin==0
  disp('spc = idsrs(Ts,Max,M,td,w,tf,zmin,plt,dt,n)')
  return
end
if ~(exist('w')==1)
  w=[];
end
if ~(exist('dt')==1)
  dt=[];
end
if ~(exist('n')==1)
  n=[];
end
if ~(exist('Ts')==1)
  Ts=[];
end
if ~(exist('Max')==1)  %J
  Max=[];
end
if ~(exist('M')==1)  %J
  M=[];
end
if ~(exist('td')==1)  %J
  td=[];
end
if ~(exist('tf')==1)  %J
  tf=[];
end
if ~(exist('zmin')==1)  %J
  zmin=[];
end
if ~(exist('plt')==1)  %J
  plt=[];
end
if (isempty(Ts))
  error('A settling-time must be given!')
elseif length(Ts)==1
  ts=Ts(1);ptsu=5;ptsl=5;
elseif length(Ts)==2
  ts=Ts(1);ptsu=Ts(2);ptsl=ptsu;
elseif length(Ts)==3
  ts=Ts(1);ptsu=Ts(2);ptsl=Ts(3);
end
if isempty(Max)
  error('A maximum value must be given!')
end
if isempty(M)
  M=30;
end
if isempty(td)
  td=ts/5;
end
if isempty(tf)
  tf=2*ts;
end
if isempty(plt)
  plt=1;
end
if isempty(dt)
  dt=tf/100;
end
if isempty(w)
  w=logspace(log10(2*pi/tf/20),log10(20*2*pi/td));
end
if isempty(zmin)
  zmin=0.01;
elseif (zmin>1)||(zmin<0)
  error('zmin must be between 0 and 1.')
end
e=1000*eps;
t=[0,td,ts,ts,tf].';
if max(~(t==sort(t)))
  error('Specification times must fulfill: 0<=Delay-time<=Setting-time<=Final-time.')
end
t=t+[0,0,0,e,0].';
stu=Max*[0,1,1,ptsu/100*[1,1]].';
stl=Max*[-M/100*[1,1,1],-ptsl/100*[1,1]].';
if td==ts
  t=[0,ts,ts+e,tf].';
  stu=Max*[0,1,ptsu/100*[1,1]].';
  stl=Max*[-M/100*[1,1],-ptsl/100*[1,1]].';
end
tab=[t,stu,stl];
[spec_w,spec_t]=qspc.spc_id2(tab,w,dt,plt,zmin,n);

obj = qspc('idsrs',spec_w(:,1),spec_w(:,2),[],tab,spec_t);

end
